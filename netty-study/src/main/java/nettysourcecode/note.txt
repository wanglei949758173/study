
ChannelOption
    提供了关于TCP/IP相关的底层的一些设定
AttributeKey
    提供了在channel上保存业务的一些属性，以达到让Pipeline中下一个HandlerEvent获取到该属性的目的。

		
		通常会有两种实现方式：
			1.在ChannelHandler的回调方法中，使用自己定义的业务线程池，这样可以实现异步调用。
			2.借助于Netty提供的向ChannelPipeline添加ChannelHandler时调用的addLast方法来传递EventExecutor。
			说明：默认情况下(调用addLast(handler))，ChannelHandler中的回调方法是由I/O线程所执行，
			如果调用了ChannelPipeline addLast(EventExecutorGroup group,ChannelHandler... handlers)方法，那么ChannelHandler中的
			回到方法就是有参数中的EventExecutorGroup线程组来执行的。
	
			
	
	
	AtomicIntegerFieldUpdater要点总结：
		1.更新器更新的必须是Int类型的变量，不能是其包装类型。
		2.更新器更新的必须是volatile类型变量，确保线程之间共享变量时的立即可见性。
		3.变量不能是static的，必须要是实例变量。因为Unsafe.objectFiledOffest()方法不支持静态变量(CAS操作本质上是通过对象
		实例的偏移量来直接进行赋值)。
		4.更新器只能修改它可见范围内的变量，因为更新器是通过反射来得到这个变量，如果变量不可见就会报错。
		
		如果更新的变量时包装类型，那么可以使用AtomicReferenceFieldUpdater来进行更新。
		
	Netty中为什么使用AtomicIntegerFieldUpdater而不使用AtomicInteger来保证引用计数的原子性？
		答：因为AtomicIntegerFieldUpdater被定义为static类型的变量，全局只有一份，这样所有的ByteBuf都共享这个更新器，减少了内存的
		占用。

	  
	
		
		